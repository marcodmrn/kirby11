{"version":3,"sources":["js/libs/oxo.js"],"names":["window","oxo","width","innerWidth","height","innerHeight","animation","move","element","direction","distance","allowOutside","console","error","position","getPosition","newPosition","computeNewPosition","elPos","getBoundingClientRect","x","y","elements","obstacles","length","elFuturePos","Object","assign","every","obstacle","elementsAreColliding","setPosition","style","transform","match","RegExp","values","map","value","parseInt","replace","translation","getMovableElement","movableElement","document","querySelector","speed","getAttribute","moveElementWithArrowKeys","interval","pressed","pixels","Math","round","addEventListener","event","key","indexOf","toLowerCase","push","setInterval","requestAnimationFrame","inputs","getDirectionFromPressedKeys","filter","clearInterval","createElement","params","type","class","split","forEach","className","classList","add","styles","appendElement","appendTo","hostSelector","host","body","appendChild","onLeaveScreen","action","completly","once","observer","IntersectionObserver","entries","entry","isIntersecting","disconnect","root","rootMargin","threshold","observe","onLeaveScreenOnce","onCollisionWithElement","target","colliding","onCollisionWithElementOnce","element1Pos","element2Pos","keys","enter","space","left","up","right","down","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","z","keysListeners","listenKey","code","bind","listenKeys","listenArrowKeys","listenKeyOnce","cancelKeyListener","cancelKeysListeners","cancelKeysListener","cancelArrowKeysListeners","listenAllKeys","listener","keyCode","dir","dirPart","player","addToScore","points","log","setScore","getScore","localStorage","getItem","removeFromScore","newScore","max","setItem","refreshScore","scoreElement","getElement","innerText","screens","currentScreen","loadScreen","name","fetch","then","response","ok","text","html","innerHTML","setAttribute","call","getCurrentScreen","utils","getRandomNumber","min","floor","random","init","message","attribute"],"mappings":"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","file":"oxo.54691a36.js","sourceRoot":"..\\src","sourcesContent":["window.oxo = {\r\n  oxo: this,\r\n  width: window.innerWidth,\r\n  height: window.innerHeight,\r\n\r\n  animation: {\r\n    /**\r\n     * Modify the transform property of an element to make it move\r\n     * @param {HTMLElement} element - The element to move\r\n     * @param {string} direction - The direction\r\n     * @param {number} distance - The number of pixels for the move\r\n     * @param {allowOutside} boolean - If true, the element can go off limits\r\n     * @return {Object} - An object containing the updated position x and y\r\n     */\r\n    move(element, direction, distance, allowOutside) {\r\n      if (!element) {\r\n        console.error('The element to move was not found');\r\n        return;\r\n      }\r\n\r\n      if (!distance) {\r\n        console.error('You must provide a distance to move an element');\r\n        return;\r\n      }\r\n\r\n      var position = oxo.animation.getPosition(element);\r\n      var newPosition = oxo.animation.computeNewPosition(\r\n        position,\r\n        direction,\r\n        distance,\r\n      );\r\n\r\n      var elPos = element.getBoundingClientRect();\r\n\r\n      if (!allowOutside) {\r\n        if (\r\n          newPosition.x + elPos.width > oxo.width ||\r\n          newPosition.x < 0 ||\r\n          newPosition.y + elPos.height > oxo.height ||\r\n          newPosition.y < 0\r\n        ) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (oxo.elements.obstacles.length) {\r\n        var elFuturePos = Object.assign(elPos, {\r\n          x: newPosition.x,\r\n          y: newPosition.y,\r\n        });\r\n\r\n        if (\r\n          !oxo.elements.obstacles.every(function(obstacle) {\r\n            return (\r\n              obstacle == element ||\r\n              !oxo.elements.elementsAreColliding(\r\n                obstacle.getBoundingClientRect(),\r\n                elFuturePos,\r\n              )\r\n            );\r\n          })\r\n        ) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      oxo.animation.setPosition(element, newPosition);\r\n\r\n      return newPosition;\r\n    },\r\n\r\n    /**\r\n     * Modify a position object depending on direction and distance\r\n     * @param {Object} position - An object containing the x and y position\r\n     * @param {string} direction - The direction in which to move\r\n     * @param {number} distance - The distance to move\r\n     */\r\n    computeNewPosition(position, direction, distance) {\r\n      var newPosition = Object.assign({}, position);\r\n\r\n      switch (direction) {\r\n        case 'left':\r\n          newPosition.x -= distance;\r\n          break;\r\n        case 'left-up':\r\n          newPosition.y -= distance;\r\n          newPosition.x -= distance;\r\n          break;\r\n        case 'up':\r\n          newPosition.y -= distance;\r\n          break;\r\n        case 'right-up':\r\n          newPosition.y -= distance;\r\n          newPosition.x += distance;\r\n          break;\r\n        case 'right':\r\n          newPosition.x += distance;\r\n          break;\r\n        case 'right-down':\r\n          newPosition.x += distance;\r\n          newPosition.y += distance;\r\n          break;\r\n        case 'down':\r\n          newPosition.y += distance;\r\n          break;\r\n        case 'left-down':\r\n          newPosition.y += distance;\r\n          newPosition.x -= distance;\r\n          break;\r\n        default:\r\n          console.error(\r\n            'The direction provided (' + direction + ') is not valid',\r\n          );\r\n          return;\r\n      }\r\n\r\n      return newPosition;\r\n    },\r\n\r\n    /**\r\n     * Get the values of the translate property for the given element\r\n     * @param {HTMLElement} element - The element\r\n     * @return {Object} An object containing the x and the y position\r\n     */\r\n    getPosition(element) {\r\n      var position = element.style.transform.match(\r\n        new RegExp(/translate\\(.+\\)/),\r\n      );\r\n\r\n      if (position) {\r\n        var values = position[0]\r\n          .match(/-?\\d+/g)\r\n          .map((value) => parseInt(value));\r\n        return {\r\n          x: values[0],\r\n          y: values[1],\r\n        };\r\n      } else {\r\n        return { x: 0, y: 0 };\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Set the translate property of the given element\r\n     * @param {HTMLElement} element - The element to move\r\n     * @param {Object} position - An object containing the x and y values\r\n     * @return {string} - The updated transform property\r\n     */\r\n    setPosition(element, position) {\r\n      var transform = element.style.transform.replace(/translate\\(.+\\)/, '');\r\n\r\n      var translation = 'translate(' + position.x + 'px, ' + position.y + 'px)';\r\n\r\n      return (element.style.transform = transform + translation);\r\n    },\r\n\r\n    /**\r\n     * Search for an element that can be moved and call the adequate function\r\n     * @return {HTMLElement} the element moved\r\n     */\r\n    getMovableElement() {\r\n      var movableElement = document.querySelector('[data-oxo-movable]');\r\n\r\n      if (movableElement) {\r\n        var speed = movableElement.getAttribute('data-oxo-speed');\r\n        speed = speed ? speed : 10;\r\n        oxo.animation.moveElementWithArrowKeys(movableElement, speed);\r\n\r\n        return movableElement;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Move an element when the user press the arrow keys\r\n     * @param {HTMLElement} element - The element to move\r\n     * @param {number} speed - The speed of the movement\r\n     */\r\n    moveElementWithArrowKeys(element, speed) {\r\n      var interval;\r\n      var pressed = [];\r\n      var pixels = speed > 100 ? Math.round(speed / 100) : 1;\r\n\r\n      document.addEventListener('keydown', function(event) {\r\n        if (event.key.indexOf('Arrow') === 0) {\r\n          var direction = event.key.replace('Arrow', '').toLowerCase();\r\n\r\n          if (pressed.indexOf(direction) === -1) {\r\n            pressed.push(direction);\r\n\r\n            if (!interval) {\r\n              interval = setInterval(function() {\r\n                window.requestAnimationFrame(function() {\r\n                  if (pressed.length) {\r\n                    oxo.animation.move(\r\n                      element,\r\n                      oxo.inputs.getDirectionFromPressedKeys(pressed),\r\n                      pixels,\r\n                      false,\r\n                    );\r\n                  }\r\n                });\r\n              }, 100 / speed);\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      document.addEventListener('keyup', function(event) {\r\n        if (event.key.indexOf('Arrow') === 0) {\r\n          var direction = event.key.replace('Arrow', '').toLowerCase();\r\n\r\n          pressed = pressed.filter((key) => key !== direction);\r\n          if (!pressed.length) {\r\n            clearInterval(interval);\r\n            interval = null;\r\n          }\r\n        }\r\n      });\r\n    },\r\n  },\r\n\r\n  elements: {\r\n    obstacles: [],\r\n    /**\r\n     * Create an HTML element\r\n     * @param {*} params - An object containing the element parameters\r\n     * @return {HTMLElement} The created element\r\n     */\r\n    createElement(params) {\r\n      var element = document.createElement(params.type ? params.type : 'div');\r\n\r\n      if (params.class) {\r\n        params.class.split(' ').forEach(function(className) {\r\n          element.classList.add(className);\r\n        });\r\n      }\r\n\r\n      if (params.styles) {\r\n        for (style in params.styles) {\r\n          element.style[style] = params.styles[style];\r\n        }\r\n      }\r\n\r\n      if (params.obstacle) {\r\n        oxo.elements.obstacles.push(element);\r\n      }\r\n\r\n      oxo.elements.appendElement(element, params.appendTo);\r\n\r\n      return element;\r\n    },\r\n\r\n    /**\r\n     * Append an element inside another one\r\n     * @param {HTMLElement} element - The element to append\r\n     * @param {string} hostSelector - The string to select the host element\r\n     */\r\n    appendElement(element, hostSelector) {\r\n      var host = hostSelector\r\n        ? document.querySelector(hostSelector)\r\n        : document.body;\r\n\r\n      if (!host) {\r\n        console.error('No element was found for selector ', +hostSelector);\r\n        return;\r\n      }\r\n\r\n      host.appendChild(element);\r\n    },\r\n\r\n    /**\r\n     * Execute an action when the given element collides with the border\r\n     * @param {HTMLElement} element - The element to observe\r\n     * @param {Function} action - The action to execute\r\n     * @param {boolean} completly - If true, the whole element must be outside\r\n     * @param {boolean} once - If true, the action will be executed only once\r\n     * @return {IntersectionObserver} - The observer\r\n     */\r\n    onLeaveScreen(element, action, completly, once) {\r\n      var observer = new IntersectionObserver(\r\n        function(entries) {\r\n          entries.forEach(function(entry) {\r\n            if (!entry.isIntersecting) {\r\n              action();\r\n\r\n              if (once) {\r\n                observer.disconnect();\r\n              }\r\n            }\r\n          });\r\n        },\r\n        {\r\n          root: null,\r\n          rootMargin: '0px',\r\n          threshold: completly ? 0 : 1,\r\n        },\r\n      );\r\n      observer.observe(element);\r\n\r\n      return observer;\r\n    },\r\n\r\n    /**\r\n     * Execute an action once the given element collides with the border\r\n     * @param {HTMLElement} element - The element to observe\r\n     * @param {Function} action - The action to execute\r\n     * @param {boolean} completly - If true, the whole element must be outside\r\n     * @return {IntersectionObserver} - The observer\r\n     */\r\n    onLeaveScreenOnce(element, action, completly) {\r\n      return oxo.elements.onLeaveScreen(element, action, completly, true);\r\n    },\r\n\r\n    /**\r\n     * Execute an action when two element collides\r\n     * @param {HTMLElement} element - The element to observe\r\n     * @param {HTMLElement} target - The element to collide with\r\n     * @param {Function} action - The action to execute\r\n     * @param {boolean} once - If true, the action is executed only once\r\n     * @return {Interval} - The timer used for checking\r\n     */\r\n    onCollisionWithElement(element, target, action, once) {\r\n      var colliding = false;\r\n\r\n      var interval = setInterval(function() {\r\n        if (\r\n          oxo.elements.elementsAreColliding(\r\n            element.getBoundingClientRect(),\r\n            target.getBoundingClientRect(),\r\n          )\r\n        ) {\r\n          if (!colliding) {\r\n            action();\r\n            colliding = true;\r\n\r\n            if (once) {\r\n              clearInterval(interval);\r\n            }\r\n          }\r\n        } else {\r\n          colliding = false;\r\n        }\r\n      }, 10);\r\n\r\n      return interval;\r\n    },\r\n\r\n    /**\r\n     * Execute an action once when two element collides\r\n     * @param {HTMLElement} element - The element to observe\r\n     * @param {HTMLElement} target - The element to collide with\r\n     * @param {Function} action - The action to execute\r\n     * @return {Interval} - The timer used for checking\r\n     */\r\n    onCollisionWithElementOnce(element, target, action) {\r\n      return oxo.elements.onCollisionWithElement(element, target, action, true);\r\n    },\r\n\r\n    /**\r\n     * Test if two elements are in collision\r\n     * @param {Object} element1Pos - The first element position\r\n     * @param {Object} element2Pos - The second element position\r\n     */\r\n    elementsAreColliding(element1Pos, element2Pos) {\r\n      return (\r\n        element1Pos.x < element2Pos.x + element2Pos.width &&\r\n        element1Pos.x + element1Pos.width > element2Pos.x &&\r\n        element1Pos.y < element2Pos.y + element2Pos.height &&\r\n        element1Pos.height + element1Pos.y > element2Pos.y\r\n      );\r\n    },\r\n  },\r\n\r\n  inputs: {\r\n    keys: {\r\n      enter: 13,\r\n      space: 32,\r\n      left: 37,\r\n      up: 38,\r\n      right: 39,\r\n      down: 40,\r\n      a: 65,\r\n      b: 66,\r\n      c: 67,\r\n      d: 68,\r\n      e: 69,\r\n      f: 70,\r\n      g: 71,\r\n      h: 72,\r\n      i: 73,\r\n      j: 74,\r\n      k: 75,\r\n      l: 76,\r\n      m: 77,\r\n      n: 78,\r\n      o: 79,\r\n      p: 80,\r\n      q: 81,\r\n      r: 82,\r\n      s: 83,\r\n      t: 84,\r\n      u: 85,\r\n      v: 86,\r\n      w: 87,\r\n      x: 88,\r\n      y: 89,\r\n      z: 90,\r\n    },\r\n    keysListeners: {},\r\n\r\n    /**\r\n     * Execute the given action each time the given key is pressed\r\n     * @param {string} key - The key to press to trigger the action\r\n     * @param {Function} action - The function that will be executed\r\n     * @param {boolean} once - If true, the action will be executed only once\r\n     */\r\n    listenKey(key, action, once) {\r\n      if (!once) {\r\n        once = false;\r\n      }\r\n\r\n      var code = oxo.inputs.keys[key];\r\n\r\n      if (!code) {\r\n        console.error('The key \"' + code + '\" cannot be found');\r\n        return;\r\n      }\r\n\r\n      oxo.inputs.keysListeners[code] = {\r\n        action: action.bind(this, key),\r\n        once: once,\r\n      };\r\n    },\r\n\r\n    /**\r\n     * Execute the given action each time one of the given key is pressed\r\n     * @param {Array<string>} keys - The keys that should trigger the action\r\n     * @param {Function} action - The action to execute\r\n     */\r\n    listenKeys(keys, action) {\r\n      keys.forEach(function(key) {\r\n        oxo.inputs.listenKey(key, action);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Execute the given action each time an arrow key is pressed\r\n     * @param {Function} action - The action to execute\r\n     */\r\n    listenArrowKeys(action) {\r\n      oxo.inputs.listenKeys(['left', 'up', 'right', 'down'], action);\r\n    },\r\n\r\n    /**\r\n     * Execute the given action the next time the given key is pressed\r\n     * @param {string} key - The key to press to trigger the action\r\n     * @param {Function} action - The function that will be executed\r\n     * */\r\n    listenKeyOnce(key, action) {\r\n      oxo.inputs.listenKey(key, action, true);\r\n    },\r\n\r\n    /**\r\n     * Cancel the listener for the given key\r\n     * @param {string} key - The key to stop listening to\r\n     */\r\n    cancelKeyListener(key) {\r\n      delete oxo.inputs.keysListeners[oxo.inputs.keys[key]];\r\n    },\r\n\r\n    /**\r\n     * Cancel the listeners for several keys\r\n     * @param {Array<string>} - The keys to stop listening to\r\n     */\r\n    cancelKeysListeners(keys) {\r\n      keys.forEach(function(key) {\r\n        oxo.inputs.cancelKeysListener(key);\r\n      });\r\n    },\r\n\r\n    /** Cancel the listening of arrow keys */\r\n    cancelArrowKeysListeners() {\r\n      oxo.inputs.cancelKeysListener(['left', 'up', 'right', 'down']);\r\n    },\r\n\r\n    /**\r\n     * This method will be executed on initialization to listen all the keys\r\n     */\r\n    listenAllKeys() {\r\n      document.addEventListener('keydown', function(event) {\r\n        listener = oxo.inputs.keysListeners[event.keyCode];\r\n        if (listener) {\r\n          listener.action();\r\n\r\n          if (listener.once) {\r\n            delete oxo.inputs.keysListeners[event.keyCode];\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Get the direction by combining the differents keys pressed\r\n     * @param {Array<string>} pressed - The direction currently pressed\r\n     * @return {string} the direction\r\n     */\r\n    getDirectionFromPressedKeys(pressed) {\r\n      var direction = pressed[0];\r\n\r\n      ['left-up', 'left-down', 'right-up', 'right-down'].forEach(function(dir) {\r\n        if (\r\n          dir.split('-').every(function(dirPart) {\r\n            return pressed.indexOf(dirPart) > -1;\r\n          })\r\n        ) {\r\n          direction = dir;\r\n        }\r\n      });\r\n\r\n      return direction;\r\n    },\r\n  },\r\n\r\n  player: {\r\n    /**\r\n     * Add one or several points to the score\r\n     * @param {number} points - The number of points to add\r\n     * @return {number} The new score\r\n     */\r\n    addToScore(points) {\r\n      oxo.log('Add ' + points + ' points to the score');\r\n\r\n      return oxo.player.setScore(oxo.player.getScore() + points);\r\n    },\r\n\r\n    /**\r\n     * Get the score\r\n     * @return {number} The score\r\n     */\r\n    getScore() {\r\n      return parseInt(localStorage.getItem('score'));\r\n    },\r\n\r\n    /**\r\n     * Remove one or several points from the score\r\n     * @param {number} points - The number of points to remove\r\n     * @return {number} The new score\r\n     */\r\n    removeFromScore(points) {\r\n      var newScore = Math.max(0, oxo.player.getScore() - points);\r\n      oxo.log('Remove ' + points + ' points from the score');\r\n\r\n      return oxo.player.setScore(newScore);\r\n    },\r\n\r\n    /**\r\n     * Set the score\r\n     * @param {number} points - The score\r\n     * @return {number} The score\r\n     */\r\n    setScore(points) {\r\n      localStorage.setItem('score', points);\r\n      oxo.log('New score is ' + points);\r\n\r\n      oxo.player.refreshScore();\r\n\r\n      return points;\r\n    },\r\n\r\n    /**\r\n     * Refresh the score display\r\n     */\r\n    refreshScore() {\r\n      var scoreElement = oxo.getElement('score');\r\n\r\n      if (scoreElement) {\r\n        scoreElement.innerText = oxo.player.getScore();\r\n      }\r\n    },\r\n  },\r\n\r\n  screens: {\r\n    currentScreen: '',\r\n    /**\r\n     * Load a new screen (and add matching class to the body)\r\n     * @param {string} name - The name of the html file for the screen to load\r\n     * @param {Function} action - The function to execute after loading\r\n     * @return {Promise} - The fetch promise\r\n     */\r\n    loadScreen(name, action) {\r\n      return fetch('../../screens/' + name + '.html').then(function(response) {\r\n        if (response.ok) {\r\n          response.text().then(function(html) {\r\n            document.body.innerHTML = html;\r\n            document.body.setAttribute('class', name);\r\n            oxo.log('Load screen ' + name);\r\n            oxo.player.refreshScore();\r\n            oxo.animation.getMovableElement();\r\n            oxo.screens.currentScreen = name;\r\n\r\n            if (action) {\r\n              action.call();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n\r\n    /**\r\n     * Get the name of the current screen\r\n     * @return {string} the current screen\r\n     */\r\n    getCurrentScreen() {\r\n      return oxo.screens.currentScreen;\r\n    },\r\n  },\r\n\r\n  utils: {\r\n    /**\r\n     * Get a random number between two limits\r\n     * @param {number} min - The min number\r\n     * @param {number} max - The max number\r\n     * @return {number} - The random number\r\n     */\r\n    getRandomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min + 1) + min);\r\n    },\r\n  },\r\n\r\n  /**\r\n   * A function that will be run when oxo is called in order to init the game\r\n   */\r\n  init() {\r\n    oxo.screens.loadScreen('home');\r\n    oxo.inputs.listenAllKeys();\r\n    oxo.player.setScore(0);\r\n  },\r\n\r\n  /**\r\n   * Pretty logger for oxo events\r\n   * @param {string} message - The information to log\r\n   */\r\n  log(message) {\r\n    console.log('%c OXO: ' + message, 'background-color: gold; padding: 5px');\r\n  },\r\n\r\n  /**\r\n   * Find an element with an oxo data attribute in the DOM\r\n   * @param {string} attribute - The data attribute of the element (oxo-data-*)\r\n   */\r\n  getElement(attribute) {\r\n    return document.querySelector('[data-oxo-' + attribute + ']');\r\n  },\r\n};\r\n\r\nwindow.oxo.init();\r\n"]}